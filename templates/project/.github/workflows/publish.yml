#
# NOTE: This file is explicitly excluded from cargo generate's liquid template expansion
# due to conflicts between the github syntax and the liquid syntax.
#

name: publish

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-project:
    runs-on: ubuntu-latest
    outputs:
        PROJECT_NAME: ${{ steps.set_project_name.outputs.PROJECT_NAME }}
    # by default github use sh as shell
    defaults:
      run:
        # will use bash to run each command, bash will source /etc/profile which will give us the environment to build for esp32
        shell: bash --norc  -leo pipefail {0}
    container:
      image: ghcr.io/viamrobotics/micro-rdk-dev-env:1.83.0-amd64
    steps:
    - name : Checkout main branch code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Set Project Name
      id: set_project_name
      run: |
          echo "PROJECT_NAME=`cargo metadata --no-deps --format-version=1 | jq '.packages[0].name' -r`" >> $GITHUB_OUTPUT
          echo "PROJECT_VERSION=`cargo metadata --no-deps --format-version=1 | jq '.packages[0].version' -r`" >> $GITHUB_OUTPUT
    - name: Build esp32 OTA binary
      run: |
        git config --global --add safe.directory "$ESP_ROOT"/esp-idf
        make build-esp32-bin
        make build-esp32-ota
        PROJECT_NAME=${{ steps.set_project_name.outputs.PROJECT_NAME }}
        cp target/xtensa-esp32-espidf/release/${PROJECT_NAME} ${PROJECT_NAME}.elf
        cp target/xtensa-esp32-espidf/release/${PROJECT_NAME}.bin ${PROJECT_NAME}.bin
        cp target/xtensa-esp32-espidf/release/${PROJECT_NAME}-ota.bin ${PROJECT_NAME}-ota.bin
    - name: Upload release Lib
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          ${{ steps.set_project_name.outputs.PROJECT_NAME }}.elf
          ${{ steps.set_project_name.outputs.PROJECT_NAME }}.bin
          ${{ steps.set_project_name.outputs.PROJECT_NAME }}-ota.bin

  publish-release:
    needs: [build-project]
    runs-on: ubuntu-latest
    steps:
    - name: Check release type
      id: check-tag
      run: |
        if echo ${{ github.event.ref }} | grep -Eq '^refs/tags/v.*rc[0-9]{1}$'; then
              echo "match=true" >> $GITHUB_OUTPUT
        else
              echo "match=false" >> $GITHUB_OUTPUT
        fi
    - name: Download binaries
      uses: actions/download-artifact@v4
      with:
        name: binaries
    - name: Compute checksums
      run: |
        sha256sum ${{ needs.build-project.outputs.PROJECT_NAME }}.elf >> sha256sums.txt
        sha256sum ${{ needs.build-project.outputs.PROJECT_NAME }}.bin >> sha256sums.txt
        sha256sum ${{ needs.build-project.outputs.PROJECT_NAME }}-ota.bin >> sha256sums.txt
    - name: Publish release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: |
          ${{ needs.build-project.outputs.PROJECT_NAME }}.elf
          ${{ needs.build-project.outputs.PROJECT_NAME }}.bin
          ${{ needs.build-project.outputs.PROJECT_NAME }}-ota.bin
          sha256sums.txt
        prerelease: ${{ steps.check-tag.outputs.match }}
        replacesArtifacts: true
        allowUpdates: true
        name: ${{ github.ref_name }}
