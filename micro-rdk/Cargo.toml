[package]
name = "micro-rdk"
authors.workspace = true
description.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

links = "micro_rdk"


[lib]
crate-type = ["lib"]

[features]
default = ["builtin-components"]
binstart = ["esp-idf-svc/binstart"]
libstart = ["esp-idf-svc/libstart"]
builtin-components = []
camera = []
esp32 = ["dep:esp-idf-svc", "dep:embedded-svc", "dep:embedded-hal", "esp-idf-svc/std", "esp-idf-svc/alloc"]
native = ["dep:rustls", "dep:webpki-roots", "dep:rustls-pemfile", "dep:mdns-sd", "dep:local-ip-address", "dep:openssl", "dep:rcgen", "dep:async-std-openssl"]
data = []

[dev-dependencies]
test-log.workspace = true
env_logger.workspace = true

[dependencies]
async-channel.workspace = true
async-io.workspace = true
async-std-openssl = { workspace = true, optional = true }
base64.workspace = true
bitfield.workspace = true
bytecodec.workspace = true
bytes.workspace = true
chrono.workspace = true
either.workspace = true
embedded-hal = { workspace = true, optional = true }
embedded-svc = { workspace = true, optional = true }
esp-idf-svc = { workspace = true, optional = true }
futures-lite.workspace = true
futures.workspace = true
h2.workspace = true
hyper.workspace = true
ignore.workspace = true
lazy_static.workspace = true
local-ip-address = { workspace = true, optional = true }
log.workspace = true
mdns-sd = { workspace = true, optional = true }
micro-rdk-macros.workspace = true
once_cell.workspace = true
openssl = { workspace = true, optional = true }
pin-project-lite.workspace = true
prost.workspace = true
rand.workspace = true
rcgen = { workspace = true, optional = true }
rustls = { workspace = true, optional = true }
rustls-pemfile = { workspace = true, optional = true }
scopeguard.workspace = true
sctp-proto.workspace = true
sdp.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
smol-timeout.workspace = true
smol.workspace = true
socket2.workspace = true
stun_codec.workspace = true
thiserror.workspace = true
tokio.workspace = true
trackable.workspace = true
webpki-roots = { workspace = true, optional = true }

[build-dependencies]
const-gen.workspace = true
embuild.workspace = true
